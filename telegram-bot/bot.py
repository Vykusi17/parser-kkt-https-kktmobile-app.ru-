#!/usr/bin/env python3
import requests
import logging
import random
from datetime import datetime
from telegram import Update, BotCommand
from telegram.ext import Application, CommandHandler, CallbackContext

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

BOT_TOKEN = "—Ç–æ–∫–µ–Ω"
API_HEADERS = {
    'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/115.0',
    'Accept': 'application/json, text/plain, */*',
    'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMjgiLCJpYXQiOjE3NjEzMzQwNjAsIm5iZiI6MTc2MTMzNDA2MCwianRpIjoiMGEwZjM3NzAtMjYxNC00MzZhLThiNTUtM2EyN2VlNmM5ZWQwIiwiZXhwIjoxNzYxNDIwNDYwLCJ0eXBlIjoiYWNjZXNzIiwiZnJlc2giOmZhbHNlfQ.CoZXOGlOqT1ov-o_avCZQkSlZ4RJvjbqE9CB_lEa3O0',
}
BASE_URL = 'https://api.kktmobile-app.ru'
GROUP = '–ò-232'

GACHI_PHRASES = [
    "‚ôÇÔ∏è BOY NEXT DOOR ‚ôÇÔ∏è",
    "‚ôÇÔ∏è FUCK YOU ‚ôÇÔ∏è", 
    "‚ôÇÔ∏è ASS WE CAN ‚ôÇÔ∏è",
    "‚ôÇÔ∏è DEEP DARK FANTASY ‚ôÇÔ∏è",
    "‚ôÇÔ∏è LEATHERMAN ‚ôÇÔ∏è",
    "‚ôÇÔ∏è SIR ‚ôÇÔ∏è",
    "‚ôÇÔ∏è BOSS OF THE GYM ‚ôÇÔ∏è",
    "‚ôÇÔ∏è FUCKING MACHINE ‚ôÇÔ∏è",
    "‚ôÇÔ∏è GACHIMUCHI ‚ôÇÔ∏è",
    "‚ôÇÔ∏è THREE HUNDRED BUCKS ‚ôÇÔ∏è"
]

def get_random_gachi():
    return random.choice(GACHI_PHRASES)

def get_schedule(day=None):
    if day is None:
        day = datetime.now().isoweekday()
    
    url = f'{BASE_URL}/schedule/students/{GROUP}/{day}'
    
    try:
        response = requests.get(url, headers=API_HEADERS)
        return response.json() if response.status_code == 200 else None
    except Exception:
        return None

async def set_bot_commands(application):
    commands = [
        BotCommand("start", "‚ôÇÔ∏è –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É"),
        BotCommand("today", "üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è"),
        BotCommand("tomorrow", "üìÜ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞"),
        BotCommand("week", "üìö –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é"),
        BotCommand("gachi", "‚ôÇÔ∏è –°–ª—É—á–∞–π–Ω–∞—è –≥–∞—á–∏-—Ñ—Ä–∞–∑–∞"),
        BotCommand("help", "‚ùì –ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º")
    ]
    await application.bot.set_my_commands(commands)

async def start(update: Update, context: CallbackContext):
    user = update.effective_user
    gachi_phrase = get_random_gachi()
    
    await update.message.reply_html(
        f"‚ôÇÔ∏è <b>WELCOME TO THE GYM, {user.first_name}! ‚ôÇÔ∏è</b>\n\n"
        f"{gachi_phrase}\n\n"
        "üéì <b>–ë–æ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã –ò-232</b>\n\n"
        "üìã <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
        "/today - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è\n"
        "/tomorrow - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞\n" 
        "/week - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é\n"
        "/gachi - —Å–ª—É—á–∞–π–Ω–∞—è –≥–∞—á–∏-—Ñ—Ä–∞–∑–∞\n"
        "/help - —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n\n"
        "üí° <i>–ù–∞—á–Ω–∏—Ç–µ –≤–≤–æ–¥–∏—Ç—å / —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã</i>\n\n"
        "‚ôÇÔ∏è <i>FUCKING SCHEDULE READY ‚ôÇÔ∏è</i>"
    )

async def today(update: Update, context: CallbackContext):
    today_date = datetime.now()
    day_name = get_day_name(today_date.isoweekday())
    gachi_phrase = get_random_gachi()
    
    schedule = get_schedule()
    
    if schedule and isinstance(schedule, list) and schedule:
        message = (
            f"üìÖ <b>‚ôÇÔ∏è –†–ê–°–ü–ò–°–ê–ù–ò–ï –ù–ê –°–ï–ì–û–î–ù–Ø ‚ôÇÔ∏è</b>\n"
            f"üìÜ {today_date.strftime('%d.%m.%Y')}, {day_name}\n"
            f"üéØ –ü–∞—Ä —Å–µ–≥–æ–¥–Ω—è: {len(schedule)}\n\n"
        )
        
        for i, lesson in enumerate(schedule, 1):
            message += (
                f"<b>{i}. {lesson.get('subject', '–ü—Ä–µ–¥–º–µ—Ç')}</b>\n"
                f"   ‚è∞ {lesson.get('start_time', '')} - {lesson.get('end_time', '')}\n"
                f"   üë®‚Äçüè´ {lesson.get('teacher_full_name', '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å')}\n"
                f"   üè´ {lesson.get('room', '–ê—É–¥–∏—Ç–æ—Ä–∏—è')}\n\n"
            )
        
        message += f"‚ôÇÔ∏è <i>{gachi_phrase}</i> ‚ôÇÔ∏è"
    else:
        message = (
            f"üéâ <b>‚ôÇÔ∏è –°–ï–ì–û–î–ù–Ø –ü–ê–† –ù–ï–¢! ‚ôÇÔ∏è</b>\n"
            f"üìÜ {today_date.strftime('%d.%m.%Y')}, {day_name}\n\n"
            f"‚ôÇÔ∏è <i>{gachi_phrase}</i> ‚ôÇÔ∏è"
        )
    
    await update.message.reply_html(message)

async def tomorrow(update: Update, context: CallbackContext):
    tomorrow_date = datetime.now().replace(day=datetime.now().day + 1)
    day_num = tomorrow_date.isoweekday()
    day_name = get_day_name(day_num)
    gachi_phrase = get_random_gachi()
    
    schedule = get_schedule(day_num)
    
    if schedule and isinstance(schedule, list) and schedule:
        message = (
            f"üìÖ <b>‚ôÇÔ∏è –†–ê–°–ü–ò–°–ê–ù–ò–ï –ù–ê –ó–ê–í–¢–†–ê ‚ôÇÔ∏è</b>\n"
            f"üìÜ {tomorrow_date.strftime('%d.%m.%Y')}, {day_name}\n"
            f"üéØ –ü–∞—Ä –∑–∞–≤—Ç—Ä–∞: {len(schedule)}\n\n"
        )
        
        for i, lesson in enumerate(schedule, 1):
            message += (
                f"<b>{i}. {lesson.get('subject', '–ü—Ä–µ–¥–º–µ—Ç')}</b>\n"
                f"   ‚è∞ {lesson.get('start_time', '')} - {lesson.get('end_time', '')}\n"
                f"   üë®‚Äçüè´ {lesson.get('teacher_full_name', '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å')}\n"
                f"   üè´ {lesson.get('room', '–ê—É–¥–∏—Ç–æ—Ä–∏—è')}\n\n"
            )
        
        message += f"‚ôÇÔ∏è <i>{gachi_phrase}</i> ‚ôÇÔ∏è"
    else:
        message = (
            f"üéâ <b>‚ôÇÔ∏è –ó–ê–í–¢–†–ê –ü–ê–† –ù–ï–¢! ‚ôÇÔ∏è</b>\n"
            f"üìÜ {tomorrow_date.strftime('%d.%m.%Y')}, {day_name}\n\n"
            f"‚ôÇÔ∏è <i>{gachi_phrase}</i> ‚ôÇÔ∏è"
        )
    
    await update.message.reply_html(message)

async def week(update: Update, context: CallbackContext):
    """–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é"""
    gachi_phrase = get_random_gachi()
    
    message = "üìÖ <b>‚ôÇÔ∏è –†–ê–°–ü–ò–°–ê–ù–ò–ï –ù–ê –ù–ï–î–ï–õ–Æ ‚ôÇÔ∏è</b>\n\n"
    
    days = {
        1: "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", 2: "–í—Ç–æ—Ä–Ω–∏–∫", 3: "–°—Ä–µ–¥–∞", 
        4: "–ß–µ—Ç–≤–µ—Ä–≥", 5: "–ü—è—Ç–Ω–∏—Ü–∞", 6: "–°—É–±–±–æ—Ç–∞"
    }
    
    for day_num, day_name in days.items():
        schedule = get_schedule(day_num)
        
        message += f"<b>üìñ {day_name}:</b>\n"
        
        if schedule and isinstance(schedule, list) and schedule:
            for i, lesson in enumerate(schedule, 1):
                message += (
                    f"  {i}. <b>{lesson.get('subject', '–ü—Ä–µ–¥–º–µ—Ç')}</b>\n"
                    f"     ‚è∞ {lesson.get('start_time', '')}-{lesson.get('end_time', '')}\n"
                    f"     üè´ {lesson.get('room', '–ê—É–¥–∏—Ç–æ—Ä–∏—è')}\n"
                )
        else:
            message += "  üéâ –ü–∞—Ä –Ω–µ—Ç\n"
        
        message += "\n"
    
    message += f"‚ôÇÔ∏è <i>{gachi_phrase}</i> ‚ôÇÔ∏è"
    await update.message.reply_html(message)

async def help_command(update: Update, context: CallbackContext):
    gachi_phrase = get_random_gachi()
    
    await update.message.reply_html(
        "üìö <b>‚ôÇÔ∏è –î–û–°–¢–£–ü–ù–´–ï –ö–û–ú–ê–ù–î–´ ‚ôÇÔ∏è</b>\n\n"
        "/start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É\n"
        "/today - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è\n" 
        "/tomorrow - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞\n"
        "/week - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é\n"
        "/gachi - —Å–ª—É—á–∞–π–Ω–∞—è –≥–∞—á–∏-—Ñ—Ä–∞–∑–∞\n"
        "/help - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n\n"
        "üí° <i>–ù–∞—á–Ω–∏—Ç–µ –≤–≤–æ–¥–∏—Ç—å / —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã</i>\n\n"
        f"‚ôÇÔ∏è <i>{gachi_phrase}</i> ‚ôÇÔ∏è"
    )

async def gachi_command(update: Update, context: CallbackContext):
    gachi_phrase = get_random_gachi()
    await update.message.reply_html(f"‚ôÇÔ∏è <b>{gachi_phrase}</b> ‚ôÇÔ∏è")

def get_day_name(day_num):

    days = {
        1: "–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", 2: "–≤—Ç–æ—Ä–Ω–∏–∫", 3: "—Å—Ä–µ–¥–∞",
        4: "—á–µ—Ç–≤–µ—Ä–≥", 5: "–ø—è—Ç–Ω–∏—Ü–∞", 6: "—Å—É–±–±–æ—Ç–∞", 7: "–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"
    }
    return days.get(day_num, "–¥–µ–Ω—å")

def main():

    application = Application.builder().token(BOT_TOKEN).build()
    
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("today", today))
    application.add_handler(CommandHandler("tomorrow", tomorrow))
    application.add_handler(CommandHandler("week", week))
    application.add_handler(CommandHandler("gachi", gachi_command))
    application.add_handler(CommandHandler("help", help_command))
    
    application.post_init = set_bot_commands

    print("BOT")
    application.run_polling()

if __name__ == "__main__":
    main()
